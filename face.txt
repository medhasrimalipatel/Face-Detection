#Face Detection program


import cv2

# Load the pre-trained model for face detection
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Function to perform face detection
def detect_faces(image_path):
    # Load an image
    img = cv2.imread(image_path)
    
    #if image is not selected
    if img is None:
        #printing the error message
        print("Error: Image not loaded.")
        return
    
    #image dimensions
    print(f"Image dimensions: {img.shape}")
    
    # Convert the image to grayscale
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    
    # Detect faces in the image
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5, minSize=(30, 30))
    
    # Draw rectangles around the faces
    for (x, y, w, h) in faces:
        cv2.rectangle(img, (x, y), (x+w, y+h), (255, 0, 0), 2)
        

    # Display the output
    cv2.imshow('Face Detection', img)
    cv2.waitKey(0)
    cv2.destroyAllWindows()


# Path to the image file (using raw string)
image_path =r"C:\Users\Manasa_Vinay_Kavya\image.jpg"
# Perform face detection
detect_faces(image_path)
